<?php

namespace {{ namespace }};

use Illuminate\Database\Eloquent\Builder;
use IndexZer0\EloquentFiltering\Contracts\Target;
use IndexZer0\EloquentFiltering\Filter\Filterable\ApprovedFilter;
use IndexZer0\EloquentFiltering\Filter\FilterMethods\Abstract\AbstractFieldFilter;

class {{ class }} extends AbstractFieldFilter
{
    final public function __construct(
        protected Target $target,
        protected mixed  $value,
    ) {
    }

    public static function type(): string
    {
        // TODO: Implement type() method.
    }

    public static function format(): array
    {
        return [
            'target' => ['required', 'string'],
            'value'  => ['required'],
        ];
    }

    public static function from(ApprovedFilter $approvedFilter): static
    {
        return new static(
            $approvedFilter->target(),
            $approvedFilter->data_get('value')
        );
    }

    public function apply(Builder $query): Builder
    {
        return $query->where($this->target->getReal(), $this->value);
    }
}
